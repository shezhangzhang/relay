window.SIDEBAR_ITEMS = {"enum":[["DataCategory","Classifies the type of data that is being ingested."],["EventType","The type of an event."],["GlobFlags","Controls the globbing behaviors."],["RelayErrorCode","Represents all possible error codes."],["SpanStatus","Trace status."]],"fn":[["relay_buf_free","Frees a Relay buf."],["relay_compare_versions","Compares two versions."],["relay_convert_datascrubbing_config","Convert an old datascrubbing config to the new PII config format."],["relay_create_register_challenge","Creates a challenge from a register request and returns JSON."],["relay_data_category_from_event_type","Parses a `DataCategory` from an event type."],["relay_data_category_name","Returns the API name of the given `DataCategory`."],["relay_data_category_parse","Parses a `DataCategory` from its API name."],["relay_err_clear","Clears the last error."],["relay_err_get_backtrace","Returns the panic information as string."],["relay_err_get_last_code","Returns the last error code."],["relay_err_get_last_message","Returns the last error message."],["relay_generate_key_pair","Generates a secret, public key pair."],["relay_generate_relay_id","Randomly generates an relay id"],["relay_geoip_lookup_free","Frees a `RelayGeoIpLookup`."],["relay_geoip_lookup_new","Opens a maxminddb file by path."],["relay_init","Initializes the library"],["relay_is_glob_match","Performs a glob operation on bytes."],["relay_parse_release","Parse a sentry release structure from a string."],["relay_pii_selector_suggestions_from_event","Walk through the event and collect selectors that can be applied to it in a PII config. This function is used in the UI to provide auto-completion of selectors."],["relay_pii_strip_event","Scrub an event using new PII stripping config."],["relay_publickey_free","Frees a public key."],["relay_publickey_parse","Parses a public key from a string."],["relay_publickey_to_string","Converts a public key into a string."],["relay_publickey_verify","Verifies a signature"],["relay_publickey_verify_timestamp","Verifies a signature"],["relay_secretkey_free","Frees a secret key."],["relay_secretkey_parse","Parses a secret key from a string."],["relay_secretkey_sign","Verifies a signature"],["relay_secretkey_to_string","Converts a secret key into a string."],["relay_split_chunks","Chunks the given text based on remarks."],["relay_store_normalizer_free","Frees a `RelayStoreNormalizer`."],["relay_store_normalizer_new","Creates a new normalization processor."],["relay_store_normalizer_normalize_event","Normalizes the event given as JSON."],["relay_str_free","Frees a Relay str."],["relay_str_from_cstr","Creates a Relay string from a c string."],["relay_test_panic","A test function that always panics."],["relay_translate_legacy_python_json","Replaces invalid JSON generated by Python."],["relay_uuid_is_nil","Returns true if the uuid is nil."],["relay_uuid_to_str","Formats the UUID into a string."],["relay_valid_platforms","Returns a list of all valid platform identifiers."],["relay_validate_pii_config","Validate a PII config against the schema. Used in project options UI."],["relay_validate_register_response","Validates a register response."],["relay_validate_sampling_condition","Validate a sampling rule condition."],["relay_validate_sampling_configuration","Validate whole rule ( this will be also implemented in Sentry for better error messages) The implementation in relay is just to make sure that the Sentry implementation doesnâ€™t go out of sync."],["relay_version_supported","Returns true if the given version is supported by this library."]],"struct":[["RelayBuf","A binary buffer of known length."],["RelayGeoIpLookup","A geo ip lookup helper based on maxmind db files."],["RelayKeyPair","Represents a key pair from key generation."],["RelayPublicKey","Represents a public key in Relay."],["RelayRegisterRequest","Represents a register request."],["RelaySecretKey","Represents a secret key in Relay."],["RelayStoreNormalizer","The processor that normalizes events for store."],["RelayStr","A length-prefixed UTF-8 string."],["RelayUuid","A 16-byte UUID."]]};