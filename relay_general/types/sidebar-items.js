window.SIDEBAR_ITEMS = {"enum":[["ErrorKind","The kind of an `Error`."],["ProcessingAction","Used to indicate how to handle an annotated value in a callback."],["RemarkType","Gives an indication about the type of remark."],["SkipSerialization","Defines behavior for skipping the serialization of fields."],["SpanAttribute","The span attribute to be computed."],["Value","Represents a boxed value."]],"fn":[["to_value","Convert `T` into a `Value`."]],"struct":[["Annotated","Wrapper for data fields with optional meta data."],["Error","An error with an enumerable kind and optional data."],["Meta","Meta information for a data field in the event payload."],["MetaInner","Meta information for a data field in the event payload."],["MetaTree","Represents a tree of meta objects."],["Remark","Information on a modified section in a string."],["SerializableAnnotated","An utility to serialize annotated objects with payload."],["ValueDescription","Helper type that renders out a description of the value."]],"trait":[["Empty","A value that can be empty."],["FromValue","Implemented for all meta structures."],["IntoValue","Implemented for all meta structures."]],"type":[["Array","Alias for typed arrays."],["Map","Alias for maps."],["MetaMap","Meta for children."],["Object","Alias for typed objects."],["ProcessingResult",""],["Range","The start (inclusive) and end (exclusive) indices of a `Remark`."]]};