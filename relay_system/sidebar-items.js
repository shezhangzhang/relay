window.SIDEBAR_ITEMS = {"enum":[["SignalType","Different types of process signals"]],"fn":[["channel","Creates an unbounded channel for communicating with a [`Service`]."]],"mod":[["compat","Compatibility layer for bridging between `actix` and `tokio` 1.0."]],"struct":[["Addr","The address of a [`Service`]."],["AsyncResponse","Message response resulting in an asynchronous [`Request`]."],["BroadcastChannel","A channel that broadcasts values to attached senders."],["BroadcastRequest","The request when sending an asynchronous message to a service."],["BroadcastResponse","Variation of [`AsyncResponse`] that efficiently broadcasts responses to many requests."],["BroadcastSender","Sends a message response from a service back to the waiting [`BroadcastRequest`]."],["Configure","Configures the [`Controller`] with new parameters."],["Controller","Actor to start and gracefully stop an actix system."],["NoResponse","Message response for fire-and-forget messages with no output."],["Receiver","Inbound channel for messages sent through an [`Addr`]."],["Recipient","An address to a [`Service`] implementing any interface that takes a given message."],["Request","The request when sending an asynchronous message to a service."],["SendError","An error when sending a message to a service fails."],["Sender","Sends a message response from a service back to the waiting [`Request`]."],["Shutdown","Shutdown request message sent by the [`Controller`] to subscribed actors."],["ShutdownHandle","Notifies a service about an upcoming shutdown."],["Signal","Process signal message"],["Subscribe","Subscribtion message for [`Shutdown`] events."]],"trait":[["FromMessage","Declares a message as part of an [`Interface`]."],["Interface","A message interface for services."],["MessageResponse","Response behavior of an [`Interface`] message."],["Service","An asynchronous unit responding to messages."]]};